.\" {PTM/RL/16-02-2002/"udoskonalony vi, tekstowy edytor programistów"}
.\" Translation: Robert Luberda <robert@debian.org>, Feb 2002; vim 6.0
.\" Translation update: Robert Luberda <robert@debian.org>, Jul 2004; vim 6.3
.\" $Id: vim.1,v 1.4 2004/07/07 14:21:04 robert Exp $
.\"
.TH VIM 1 "22 lutego 2002"
.SH NAZWA
vim \- udoskonalony vi, tekstowy edytor programistów
.SH SKŁADNIA
.br
.B vim
[opcje] [plik ..]
.br
.B vim
[opcje] -
.br
.B vim
[opcje] \-t tag
.br
.B vim
[opcje] \-q [plik_z_błędami]
.PP
.br
.B ex
.br
.B view
.br
.B gvim
.B gview
.B evim
.B eview
.br
.B rvim
.B rview
.B rgvim
.B rgview
.SH OPIS
.B vim
jest edytorem tekstów, kompatybilnym z vi i może być używany do edycji wszystkich
rodzajów tekstu.
Jest szczególnie użyteczny podczas edycji programów.
.PP
.B vim
ma wiele ulepszeń w stosunku do vi: wielopoziomowe undo,
.\" FIXME - undo
możliwość pracy z wieloma oknami i buforami, podświetlanie składni, edycja linii komend,
dokańczanie nazw plików, pomoc on-line,
.\" FIXME  visual selection,
itp.
Podsumowanie różnic między
.B vim
a vi można uzyskać, wpisując ":help vi_diff.txt".
.PP
Podczas pracy z edytorem
.B vim
za pomocą polecenia ":help" można uzyskać pomoc z systemu pomocy on-line.
Zobacz poniżej, sekcja POMOC ON-LINE.
.PP
Najczęściej
.B vim
jest używany do edycji pojedynczego pliku i wywoływany:
.PP
	vim plik
.PP
Ogólniej,
.B vim
jest uruchamiany tak:
.PP
	vim [opcje] [lista_plików]
.PP
Jeżeli lista_plików nie jest podana, to edytor uruchomi się z pustym buforem.
W przeciwnym razie dokładnie jedna z poniższych czterech opcji może być użyta do wyboru
jednego lub większej liczby plików do edycji.
.TP 12
plik ...
Lista plików.
Pierwszy z nich będzie aktualnym plikiem, przeczytanym do bufora. Kursor ustawi się w pierwszej
linii bufora. Poleceniem ":next" można przejść do następnych plików.
Aby edytować plik, którego nazwa zaczyna się od myślnika, należy poprzedzić listę plików
przez "--".
.TP
-
Plik do edycji jest czytany ze standardowego wejścia (stdin). Polecenia są brane ze standardowego
wyjścia błędów (stderr), które powinno być terminalem.
.TP
-t {tag}
Plik do edycji i początkowa pozycja kursora zależą od wzorca "tag", swego rodzaju etykiety,
do której należy przeskoczyć.
Wzorzec {tag} jest szukany w pliku wzorców, po jego znalezieniu skojarzony plik zostanie otwarty
do edycji, a skojarzone ze wzorcem polecenie zostanie wykonane.
Najczęściej ta funkcjonalność jest pomocna przy pisaniu programów w C; wtedy {tag} powinien
być nazwą funkcji.
Wynik jest taki, że zostanie otwarty plik zawierający tę funkcję, a kursor
ustawi się na początku tej funkcji.
Zobacz ":help tag-commands".
.TP
-q [plik_z_błędami]
Uruchamia edytor w trybie quickFix.
Wczytuje plik [plik_z_błędami] i wyświetla pierwszy błąd. Jeżeli nie został podany
argument [plik_z_błędami], nazwa pliku jest brana z wartości opcji 'errorfile' (domyślnie
"AztecC.Err" na Amidze, "errors.err" w innych systemach).
Kolejne błędy można wyświetlić za pomocą polecenia ":cn".
Patrz ":help quickfix".
.PP
Zachowanie
.B vima
zależy od nazwy pod jaką wywołano edytor (plik wykonywalny może być wciąż
tym samym plikiem).
.TP 10
vim
Normalne uruchomienie, wszystkie opcje mają wartości domyślne.
.TP
ex
Uruchamia edytor w trybie Ex.
Przejście do normalnego trybu za pomocą polecenia ":vi".
Tak samo działa argument linii poleceń  "-e".
.TP
view
Uruchamia edytor w trybie tylko do odczytu, bez możliwości zapisywania plików.
Tak samo działa argument linii poleceń  "-R".
.TP
gvim gview
Wersja okienkowa (GUI), uruchamia nowe okno.
Tak samo działa argument linii poleceń  "-g".
.TP
evim eview
Wersja okienkowa (GUI), w łatwym trybie.
Uruchamia nowe okno.
Tak samo działa argument linii poleceń  "-y".
.TP
rvim rview rgvim rgview
Jak powyższe, ale z ograniczeniami. Nie będzie możliwe uruchomienie powłoki z poziomu edytora
ani zawieszenie (suspend)
.BR vima .
Tak samo działa argument linii poleceń  "-Z".
.SH OPCJE
Opcje mogą być podane w jakimkolwiek porządku, przed nazwami plików lub za nimi.
Opcje niewymagające argumentu mogą być połączone za jednym znakiem myślnika.
.TP 12
+[num]
Kursor będzie ustawiony w linii "num" pierwszego pliki. Jeżeli nie podano wartości "num",
kursor ustawi się w ostatniej linii.
.TP
+/{pat}
Kursor będzie ustawiony na pierwszym wystąpieniu wzorca {pat} w pierwszym pliku.
Zobacz ":help search-pattern", aby wyświetlić listę możliwych wzorców wyszukiwania.
.TP
+{polecenie}
.TP
-c {polecenie}
{polecenie} zostanie wykonane po przeczytaniu pierwszego pliku.
{polecenie} jest interpretowane jako polecenie Ex.
Jeżeli ciąg {polecenie} zawiera spacje, musi być ujęty w cudzysłowy (w zależności od
używanej powłoki).
Przykład: vim "+set si" main.c
.br
Uwaga: Można użyć do 10 poleceń  "+" lub "-c".
.TP
-S {plik}
Skrypt {plik} zostanie wykonany po przeczytaniu pierwszego pliku.
Jest to odpowiednikiem -c "source {plik}".
{plik} nie może zaczynać się od '-'.
Jeżeli nie podano argumentu {plik}, to używa się "Session.vim" (działa tylko
wtedy, gdy  -S jest ostatnim argumentem).
.TP
--cmd {polecenie}
Jak "-c", ale polecenie będzie wykonane przed przeczytaniem plików vimrc.
Można użyć do 10 takich poleceń, niezależnie od poleceń  "-c".
.TP
-A
Jeżeli
.B vim
został skompilowany ze wsparciem dla języka arabskiego, edycją
plików zorientowanych z prawa na lewo oraz arabskim mapowaniem klawiatury,
to ta opcja uruchamia
.B vima
w trybie arabskim, tj, jest włączona opcja 'arabic'. W przeciwnym wypadku
.B vim
wypisuje komunikat błędu i kończy działanie.
.TP
-b
Tryb binarny.
Zostanie ustawionych kilka opcji, które uczynią możliwym edytowanie pliku binarnego
lub wykonywalnego.
.TP
-C
Kompatybilność. Ustawia opcję 'compatible'.
.B vim
będzie się zachowywał prawie tak jak oryginalny vi, nawet jeżeli istnieje plik .vimrc.
.TP
-d
Uruchamia edytor w trybie porównywania.
Argumentami tej opcji powinny być nazwy dwu lub trzech plików.
.B vim
otworzy wszystkie te pliki i pokaże różnice między nimi.
Działa tak jak vimdiff(1).
.TP
-d {urządzenie}
Otwiera {urządzenie} do używania jako terminal.
Tylko na Amidze.
Przykład:
"\-d con:20/30/600/150".
.TP
-D
Debugowanie. W czasie uruchamiania pierwszego polecenia skryptu,
przechodzi do trybu debugowania.
.TP
-e
Uruchamia
.B vima
w trybie Ex, tak samo jak wtedy, gdy plik wykonywalny nazywa się  "ex".
.TP
-E
Uruchamia
.B vima
w udoskonalonym trybie ex, tak jakby plik wykonywalny nazywał się "exim".
.TP
-f
Pierwszoplanowy. W wersji GUI
.B vim
nie odłączy się od powłoki, w której był uruchomiony.
Na Amidze,
.B vim
nie zostanie ponownie uruchomiony, by otworzyć nowe okno.
Ta opcja powinna być użyta, gdy
.B vim
jest wywołany przez program, który czeka na zakończenie edycji (na przykład: mail).
Na Amidze polecenia ":sh" and ":!" nie będą działać.
.TP
--nofork
Pierwszoplanowy. W wersji GUI
.B vim
nie odłączy się od powłoki na której był uruchomiony.
.TP
-F
Jeżeli
.B vim
został skompilowany ze wsparciem dla FKMAP i edycji plików zorientowanych w kierunku z prawa na
lewo oraz mapowania klawiatury Farsi, ta opcja powoduje uruchomienie
.B vima
w trybie Farsi, tzn. są ustawione opcje 'fkmap' i 'rightleft'.
W przeciwnym wypadku pojawia się informacja o błędzie i
.B vim
kończy działanie z błędem.
.TP
-g
Jeżeli
.B vim
został skompilowany ze wsparciem dla GUI (graficznego interfejsu użytkownika), ta opcja włącza GUI.
W przeciwnym wypadku,
.B vim
wypisuje komunikat o błędzie i kończy działanie.
.TP
-h
Wyświetla krótką informację o argumentach i opcjach linii poleceń, a następnie kończy działanie
.BR vima .
.TP
-H
Jeżeli
.B vim
został skompilowany z opcją RIGHTLEFT, umożliwiająca edycję tekstów w kierunku z prawa na lewo,
i hebrajskim mapowaniem klawiatury, ta opcja uruchamia
.B vima
w trybie "hebrajskim", tzn. są włączone opcje  'hkmap' i  'rightleft'.
W przeciwnym wypadku,
.B vim
wypisuje komunikat o błędzie i kończy działanie.
.TP
-i {viminfo}
Kiedy włączone jest używanie plików viminfo, ta opcja ustawia nazwę pliku viminfo, zamiast
domyślnej nazwy "~/.viminfo".
Za pomocą tej opcji można również wyłączyć używanie pliku viminfo, podając nazwę "NONE".
.TP
-L
Jak -r.
.TP
-l
Tryb lispu.
Włącza opcje 'lisp' i 'showmatch'.
.TP
-m
Uniemożliwia modyfikowanie plików.
Wyłącza opcję 'write'.
Będzie można modyfikować bufor, jednakże zapisanie bufora do pliku nie będzie możliwe.
.TP
-N
Tryb niekompatybilności z vi. Wyłącza opcję 'compatible'.
.B Vim
będzie się zachowywał lepiej, ale mniej kompatybilnie z vi, nawet jeśli plik .vimrc
nie istnieje.
.TP
-M
Zmiany są zabronione. Wyłącza opcje 'modifiable' i 'write', tak że nie można
nic zmienić w buforze, a pliki nie będą mogły być zapisane. Proszę zauważyć,
że te opcje mogą zostać ponownie ustawione, co pozwoli zmieniać pliki.
.TP
-N
Tryb niekompatybilności z vi. Wyłącza opcję 'compatible'.
Dzięki temu
.B vim
będzie działał trochę lepiej, ale będzie mniej kompatybilny z vi, nawet wtedy, gdy
nie istnieje plik .vimrc.
.TP
-n
Nie używa pliku swap.
Nie będzie możliwego odtworzenie po awarii systemu. Wygodne, jeżeli chce się edytować plik na
bardzo wolnym urządzeniu (np. dyskietka).
Można to także zrobić za pomocą ":set uc=0".
Można również wyłączyć, używając ":set uc=200".
.TP
-nb
Działa jako serwer edycji dla NetBeans. Szczegóły można znaleźć w dokumentacji.
.TP
-o[N]
Otwiera N okien w poziomie.
Jeżeli nie podano N, otwiera nowe okno dla każdego pliku.
.TP
-O[N]
Otwiera N okien w pionie.
Jeżeli nie podano N, otwiera nowe okno dla każdego pliku.
.TP
-R
Tryb "tylko do odczytu".
Ustawia opcję 'readonly'. Pozwala na edytowanie bufora pliku, ale zapobiega przypadkowemu
nadpisaniu pliku.
Aby nadpisać plik, należy dodać znak wykrzyknika do polecenia ex, na przykład w ":w!".
Opcja -R włącza opcję -n (patrz wyżej).
Opcję 'readonly' można wyłączyć używając ":set noro".
Patrz ":help 'readonly'".
.TP
-r
Wyświetla listę plików wymiany wraz z informacją, jak ich użyć w celu odzyskania danych.
.TP
-r {file}
Tryb odzyskiwania danych.
Do odzyskania danych z przerwanej sesji edytowania zostanie użyty plik wymiany.
Plikiem wymiany jest plik mający tę samą nazwą co plik tekstowy z dołączonym przyrostkiem
".swp".
Patrz ":help recovery".
.TP
-s
Tryb cichy. Tylko wtedy gdy edytor został uruchomiony jako "ex" albo gdy opcja
"-e" została podana przed opcją "-s".
.TP
-s {scriptin}
Czytany jest plik {scriptin}.
Znaki w tym pliku są interpretowane, jakby były wprowadzone z klawiatury.
To samo można uzyskać poleceniem ":source! {scriptin}".
Jeżeli przed zakończeniem sesji edytora zostanie napotkany koniec tego pliku,
następne znaki są czytane z klawiatury.
.TP
-T {terminal}
Ustawia w
.B vimie
nazwę używanego terminala.
Wymagane tylko wtedy, gdy nie automatyczne rozpoznawanie terminala nie działa.
Nazwa terminala powinna być znana
.B vimowi
(builtin) albo zdefiniowana w plikach termcap lub terminfo.
.TP
-u {vimrc}
Używa poleceń z pliku {vimrc} w celu inicjacji edytora.
Pozostałe pliki inicjacyjne są opuszczane.
Używaj tej opcji do edytowania specjalnych rodzajów plików.
Opcji tej można również użyć w celu opuszczenia jakichkolwiek inicjacji, podając "NONE"
jako nazwę pliku.
Szczegóły można uzyskać poleceniem ":help initialization" w vimie.
.TP
-U {gvimrc}
Używa poleceń z pliku {gvimrc} w celu inicjacji GUI.
Pozostałe pliki inicjacyjne GUI są opuszczane.
Opcji tej można również użyć w celu opuszczenia jakichkolwiek inicjacji, podając "NONE"
jako nazwę pliku.
Szczegóły można uzyskać poleceniem ":help gui-init" w vimie.
.TP
-V[N]
Szczegółowy. Wyświetla informacje o wykonywanych plikach oraz o czytaniu i zapisywaniu pliku
viminfo. Opcjonalny parametr N nadaje wartość opcji 'verbose'.
Domyślnie jest to 10.
.TP
-v
Uruchamia
.B vima
w trybie vi, tak jakby plik wykonywalny nazywał się "vi". Ta opcja ma skutek tylko wtedy,
gdy plik wykonywalny nazywa się "ex".
.TP
-w {scriptout}
Wszystkie wprowadzane znaki są zapisywane w pliku
{scriptout} aż do zakończenia sesji
.BR vima .
Opcja ta jest przydatna, gdy chcemy utworzyć skrypt, który będzie użyty z "vim -s" lub
":source!".
Jeżeli plik {scriptout} istnieje, wprowadzane znaki są dopisywane do niego.
.TP
-W {scriptout}
Jak -w, ale istniejący plik zostanie nadpisany.
.TP
-x
Używa kodowania podczas zapisu plików. Poprosi użytkownika o podanie klucza kodowania.
.TP
-X
Nie łączy się z serwerem X-ów. Skraca czas uruchamiania w terminalu, ale
nie ustawia tytułu okna i nie używa schowka.
.TP
-y
Uruchamia
.B vima
w trybie łatwym, tak jakby plik wykonywalny nazywał się "evim" lub "eview".
Dzięki temu
.B vim
zachowuje się jak edytor kliknij-i-pisz.
.TP
-Z
Tryb zaostrzony. Działa tak, jakby nazwa pliku wykonywalnego zaczynała się od "r".
.TP
--
Oznacza koniec opcji.
Następne argumenty będą uważane za nazwy plików. Może to być użyteczne przy edycji pliku, którego
nazwa zaczyna się od znaku '-'.
.TP
--echo-wid
Tylko w wersji GTK GUI: wypisuje identyfikator okna (Window ID) na standardowe wyjście.
.TP
--help
Wyświetla komunikat pomocy i kończy działanie, tak samo jak opcja "-h".
.TP
--literal
Nazwy plików podane jako argumenty są brane dosłownie, znaki globalne nie są rozwijane.
Nie jest potrzebne w systemach Unix, gdzie powłoka rozwija znaki globalne.
.TP
--noplugin
Nie ładuje pluginów. Implikowany przez -u NONE.
.TP
--remote
Łączy się z serwerem vima i używa go do edycji plików podanych w kolejnych argumentach.
Jeżeli nie znaleziono żadnego serwera, wypisuje ostrzeżenie i edytuje pliki
w bieżącym vimie.
.TP
--remote-expr {wyrażenie}
Łączy się z serwerem vima, wylicza {wyrażenie} i wyświetla wynik na standardowym wyjściu.
.TP
--remote-send {klucze}
Łączy się z serwerem vima i wysyła do niego podane {klucze}
.TP
--remote-silent
Jak --remote, ale nie wypisuje ostrzeżenia, jeżeli nie znajdzie serwera.
.TP
--remote-wait
Jak --remote, ale vim się nie zakończy, dopóki nie zostanie zakończona edycja plików.
.TP
--remote-wait-silent
Jak --remote-wait, ale nie wypisuje ostrzeżenia, jeżeli nie znajdzie serwera.
.TP
--serverlist
Lista wszystkich znalezionych serwerów vima.
.TP
--servername {nazwa}
Używa {nazwy} jako nazwy serwera.
Używane dla bieżącego vima, chyba że podano opcję --remote, wtedy jest to nazwa
serwera, z którym należy się połączyć
.TP
--socketid {id}
Tylko w wersji GTK GUI: używa mechanizmu GtkPlug w celu uruchomienia gvima w innym oknie.
.TP
--version
Wypisuje informacje o wersji i kończy działanie edytora.
.SH POMOC ON-LINE
Aby rozpocząć napisz ":help" w
.BR vimie .
Aby uzyskać pomoc dotyczącą konkretnego tematu, napisz ":help temat".
Na przykład: ":help ZZ" wyświetla pomoc do polecenia "ZZ".
Używając klawiszy <Tab> i CTRL-D, można dokańczać tematy (":help cmdline-completion").
Tagi umożliwiają szybkie przenoszenie się z jednego miejsca w inne (rodzaj hyperlinków, zobacz
":help").
Pliki z dokumentacją również mogą być wyświetlane w ten sposób, na przykład
":help syntax.txt".
.SH PLIKI
.TP 15
/usr/share/vim/vim63/doc/*.txt
Dokumentacja
.B vima
Użyj ":help doc-file-list", żeby przejrzeć całą listę plików.
.TP
/usr/share/vim/vim63/doc/tags
Plik z tagami używany do wyszukiwania informacji w plikach z dokumentacją.
.TP
/usr/share/vim/vim63/syntax/syntax.vim
Systemowe polecenia inicjujące obsługę składni.
.TP
/usr/share/vim/vim63/syntax/*.vim
Pliki ze składnią różnych języków.
.TP
/usr/share/vim/vimrc
Systemowy plik z poleceniami inicjującymi.
.BR vima .
.TP
/usr/share/vim/gvimrc
Systemowy plik z poleceniami inicjującymi gvima.
.TP
/usr/share/vim/vim63/optwin.vim
Skrypt używany przez polecenie ":options", ładny sposób na przejrzenie i ustawienie opcji.
.TP
/usr/share/vim/vim63/menu.vim
Polecenia inicjującymi menu programu gvim.
.TP
/usr/share/vim/vim63/bugreport.vim
Skrypt do generowania zgłoszenia o błędzie. Zobacz ":help bugs".
.TP
/usr/share/vim/vim63/filetype.vim
Skrypt służący do wykrywania typu pliku na podstawie jego nazwy. Patrz ":help 'filetype'".
.TP
/usr/share/vim/vim63/scripts.vim
Skrypt służący do wykrywania typu pliku na podstawie jego zawartości. Patrz ":help 'filetype'".
.TP
/usr/share/vim/vim63/*.ps
Pliki używane do drukowania postscriptowego.
.PP
Najświeższych informacji szukaj na stronie domowej vima:
.br
<URL:http://www.vim.org/>
.SH ZOBACZ TAKŻE
vimtutor(1)
.SH AUTOR
Większość
.B vima
została napisana przez Brama Moolenaara, jednakże z dużą pomocą innych ludzi.
Zobacz ":help credits" w edytorze
.BR vim .
.br
.B vim
jest oparty na Stevie, nad którym pracowali: Tim Thompson,
Tony Andrews i G.R. (Fred) Walter.
Aczkolwiek pozostały tylko niewielkie ilości oryginalnego kodu.
.SH BŁĘDY
Prawdopodobnie są.
":help todo" wyświetla listę znanych problemów.
.PP
Zauważ, że duża liczba rzeczy, które mogłyby być uważane za błędy, jest w rzeczywistości
spowodowana zbyt wierną reprodukcją zachowania edytora vi.
I jeżeli uważasz, że inne rzeczy są błędami "ponieważ vi robi to inaczej", powinieneś
dokładniej poczytać plik vi_diff.txt (:help vi_diff podczas pracy z vimem).
Zobacz także na opcje 'compatible' oraz 'cpoptions'.
