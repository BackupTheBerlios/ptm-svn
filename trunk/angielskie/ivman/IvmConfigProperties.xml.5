.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" 050112, Rohan <rohan.pm@gmail.com>: initial version
.\" 050128, Rohan: XML entities info
.\" 050429, Rohan: no more IvmConfigMappings.xml
.\"
.TH IVMCONFIGPROPERTIES.XML 5 "12 May 2005"
.SH NAME
IvmConfigProperties.xml \- device properties to be monitored by
.BR ivman(8)

.SH DESCRIPTION
IvmConfigProperties.xml specifies hardware properties to be monitored by
.BR ivman(8),
and allows running of certain commands when device properties change.

IvmConfigProperties.xml is parsed as an XML file.  The general form of the
file is:

.RS 1
<?xml version="1.0" encoding="UTF-8"?>
.br
<ivm:PropertiesConfig version="0.1" xmlns:ivm="http://www.eikke.com/ivm">

   <ivm:Match name="matchname" value="matchvalue">
.br
      <ivm:Property name="propertyname">
.br
          <ivm:Action value="propertyvalue1" exec="command1" />
.br
          <ivm:Action value="propertyvalue2" exec="command2" />
.br
          ...
.br
      </ivm:Property>
.br
   </ivm:Match>

   ...
   
</ivm:PropertiesConfig>
.RE

Each time a property changes on a device, this file will be parsed.  If the
Match rule matches the device on which the property changed, and the Property
rule matches the name of the property which changed, then all of the Action
rules within that Property tag wil be parsed.  If 'value' is equal to the new
value of the changed property, then the command specified in 'exec' will be
executed.

A Match element can have any of the following names:
.RS 5
.TP
.B ivm.mountable
Whether or not HAL specifies that a device can and should
be mounted.  Must be "true" or "false".
.TP
.B hal.anything
The string in place of "anything" will be taken as the name
of a HAL property string for the device, and the value of the property will
be compared to the value given.  Run 'lshal' to see a list of HAL properties
which can be used here.
.TP
.B *
Match every device.  Use with care!
.RE

As many Matches can be nested as is desired.

A Property element can have the following name:
.RS 5
.TP
.B hal.anything
The string in place of "anything" will be taken as the name
of a HAL property string for the device, and if this is the property that has
changed, enclosed rules will be processed.
.RE

An Action element can have any string as its 'value'.  If the new value of the
changed property is equal to this string, then the command given as the 'exec'
property will be executed.  It can also have the special value '*'; in this case,
the 'exec' command will be executed every time the property changes.

.B exec
supports substitution of HAL device properties.  This
is accomplished by surrounding the property name with
.BR $
symbols.  For instance, if
.BR $hal.volume.mount_point$
is within a command, it will be replaced with the volume's mount point before
execution.  No character escaping is done in the substitution, but the
characters ' and " are replaced with ?, so you can surround the substitution
with quotes without fear.

There is also a single Option which can be set in this file, and should be set
outside of any Match or Property blocks.  The syntax of this option is:
.RS 5
<ivm:Option name="checkOnInit" value="true" />
.RE
If the value of checkOnInit is true, then Ivman will check every device on the
system for matching rules when started.  For example, if a rule was present
which started a service only when a particular volume was mounted, and
Ivman was started when the volume was already mounted, it would start
the service if and only if checkOnInit was set to true.

Remember that this is an XML file, which means that characters which have a special
meaning in XML (entities) need to be escaped.  Some characters which are popular in shell scripting
(&, <, >) are among these special characters.  As a quick reference,
& becomes &amp; , < becomes &lt; , > becomes &gt; , ' becomes &apos; and " becomes &quot; .


.SH "SEE ALSO"
.BR ivman (8),
.BR IvmConfigBase.xml (5),
.BR IvmConfigActions.xml (5),
.BR IvmConfigConditions.xml (5)
