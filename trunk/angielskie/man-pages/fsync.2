.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright 1993 Rickard E. Faith (faith@cs.unc.edu) and
.\" and Copyright 2006 Michael Kerrisk <mtk-manpages@gmx.net>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified 21 Aug 1994 by Michael Chastain <mec@shell.portal.com>:
.\"   Removed note about old libc (pre-4.5.26) translating to 'sync'.
.\" Modified 15 Apr 1995 by Michael Chastain <mec@shell.portal.com>:
.\"   Added `see also' section.
.\" Modified 13 Apr 1996 by Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"   Added remarks about fdatasync.
.\" Modified 31 Jan 1997 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 18 Apr 2001 by Andi Kleen
.\"   Fix description to describe what it really does; add a few caveats.
.\" 2006-04-28, mtk, substantial rewrite of various parts.
.\"
.TH FSYNC 2 2006-04-28 "Linux 1.3.85" "Linux Programmer's Manual"
.SH NAME
fsync, fdatasync \- synchronize a file's in-core state with storage device
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "int fsync(int " fd );
.sp
.BI "int fdatasync(int " fd );
.SH DESCRIPTION
.BR fsync ()
transfers ("flushes") all modified in-core data of 
(i.e., modified buffer cache pages for) the 
file referred to by the file descriptor
.I fd
to the disk device (or other permanent storage device) 
where that file resides.
The call blocks until the device reports that the transfer has completed.
It also flushes  metadata information associated with the file (see
.BR stat (2)). 

Calling
.BR fsync ()
does not necessarily ensure
that the entry in the directory containing the file has also reached disk.
For that an explicit
.BR fsync ()
on a file descriptor for the directory is also needed.

.BR fdatasync ()
is similar to 
.BR fsync (),
but does not flush modified metadata unless that metadata 
is needed in order to allow a subsequent data retrieval to be
correctly handled.
For example, changes to 
.I st_atime 
or 
.I st_mtime
(respectively, time of last access and
time of last modification; see
.BR stat (2)) 
do not not require flushing because they are not necessary for
a subsequent data read to be handled correctly.
On the other hand, a change to the file size
.RI ( st_size ,
as made by say
.BR ftruncate (2)),
would require a metadata flush.

The aim of
.BR fdatasync (2)
is to reduce disk activity for applications that do not
require all metadata to be synchronised with the disk.
.SH "RETURN VALUE"
On success, zero is returned.  On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EBADF
.I fd
is not a valid file descriptor open for writing.
.TP
.B EIO
An error occurred during synchronization.
.TP
.BR EROFS ", " EINVAL
.I fd
is bound to a special file which does not support synchronization.
.SH NOTES
If the underlying hard disk has write caching enabled, then
the data may not really be on permanent storage when
.BR fsync () 
/ 
.BR fdatasync ()
return.
.\" See
.\" .BR hdparm (8)
.\" for how to disable that cache for IDE disks.
.LP
When an ext2 file system is mounted with the
.I sync
option, directory entries are also implicitly synced by
.BR fsync ().
.LP
On kernels before 2.4,
.BR fsync ()
on big files can be inefficient.
An alternative might be to use the
.I O_SYNC
flag to
.BR open (2).
.SH "CONFORMING TO"
POSIX.1b
.SH "SEE ALSO"
.BR bdflush (2),
.BR open (2),
.BR sync (2),
.BR sync_file_range (2),
.BR hdparm (8),
.BR mount (8),
.BR sync (8),
.BR update (8)
